@page
@using System.Globalization;
@using Humanizer;
@using Humanizer.Localisation;
@inject Game gameService
@inject ISessions sessions
@inject Events.EventLogger eventLogger
<!DOCTYPE html>
<html>
<head>
  <title>Millionaire</title>
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    @@media (prefers-color-scheme: dark) {
      body {
        background-color: #121212;
        color: white;
      }
    }
  </style>
  <script src="~/plotly.js/plotly.min.js" charset="utf-8"></script>
</head>
<body>
  @{
    var lastUpdatedAt = gameService.LastUpdatedAt.ToLocalTime();
    var idleTime = DateTimeOffset.Now - lastUpdatedAt;
    var lastUpdatedFormatted = lastUpdatedAt.ToString(CultureInfo.GetCultureInfo("ru-ru"));
    var idleTimeFormatted = idleTime.Humanize(
      precision: 2,
      culture: CultureInfo.GetCultureInfo("en-US"),
      minUnit: TimeUnit.Second,
      maxUnit: TimeUnit.Year
    );
  }
  <samp>
    Sessions: @sessions.Count()
    <br />
    Last activity @idleTimeFormatted ago. At @lastUpdatedFormatted.
  </samp>
  <div id="chart" width="100%"></div>
  <script>
    var data = [@foreach (var i in eventLogger.GamesPerDayReport()) {<text>{ d: new Date(@i.Date.ToUnixTimeMilliseconds()), n:@i.Games},</text>}];

    var trace1 = {
      type: "scatter",
      mode: "lines",
      x: data.map(d => d.d),
      y: data.map(d => d.n),
      line: { color: '#17BECF' }
    }

    var lastMonth = new Date();
    lastMonth.setMonth(lastMonth.getMonth() - 1);

    var layout = {
      title: 'Games per day',
      xaxis: {
        range: [lastMonth, new Date()],
        rangeselector: {
          buttons: [
            {
              count: 1,
              label: '1 month',
              step: 'month',
              stepmode: 'backward',
              default: true
            },
            {
              count: 6,
              label: '6 month',
              step: 'month',
              stepmode: 'backward'
            },
            { step: 'all' }
          ]
        },
        type: 'date',
        rangeslider: {
        }
      },
      yaxis: {
        autorange: true,
        type: 'linear'
      }
    };

    Plotly.newPlot('chart', [trace1], layout);
  </script>
</body>
</html>